import os
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
HTTP = HTTPRemoteProvider()


# GISTIC -----------------------------------------------------------------
GISTIC_PATH = "gistic_out"
GISTIC_1 = f"{GISTIC_PATH}/01-inputs/"
GISTIC_2 = f"{GISTIC_PATH}/02-results/"

rule gistic:
    input:
        expand(f"{GISTIC_2}""{cnv}_genes.conf_90.txt", cnv = ["amp", "del"])

rule getreference:
    input:
        HTTP.remote("www.bcgsc.ca/downloads/morinlab/reference/af-only-gnomad.hg38.vcf.gz", keep_local=True,insecure=True),
	HTTP.remote("www.bcgsc.ca/downloads/morinlab/reference/af-only-gnomad.hg38.vcf.gz.tbi", keep_local=True,insecure=True)
    output:
        "reference/af-only-gnomad.hg38.vcf.gz"
    run:
        outputName = os.path.basename(input[0])
	shell("mv {input[0]} reference/{outputName}")

rule igv2gistic:
    input:
        "data/MCL_genomes.sequenza.filtered.igv.seg",
	"reference/af-only-gnomad.hg38.vcf.gz"
    output:
        f"{GISTIC_1}""MCL_genomes.gistic.seg",
        f"{GISTIC_1}""MCL_genomes.markers.tsv"
    log:
        "logs/local/igv2gistic/igv2gistc.txt"
    params:
        igv2gistic = "software/scripts/make_gistic_files_vcf_markers.py"
    shell:
        "python {params.igv2gistic} -g -c {input[0]} -b {input[1]} -o {output[0]} -m {output[1]} 2> {log}"

rule run_gistic:
    input:
        f"{GISTIC_1}""MCL_genomes.gistic.seg",
        f"{GISTIC_1}""MCL_genomes.markers.tsv"
    output:
        expand(f"{GISTIC_2}""{cnv}_genes.conf_90.txt", cnv = ["amp", "del"])
    singularity:
        "shub://rdmorin/cancer_docker_singularity:gistic2"
    params:
        basedir = f"{GISTIC_2}",
        refgene = "hg38.UCSC.add_miR.160920.refgene.mat",
    shell:
        "gp_gistic2_from_seg -b {params.basedir} -seg {input[0]} "
        "-mk {input[1]} -refgene {params.refgene} -genegistic 1 -smallmem 1 -broad 1 "
        "-brlen 0.5 -conf 0.90 -armpeel 0 -savegene 1 -gcm extreme -smalldisk 1"

